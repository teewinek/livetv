<!doctype html>
<html lang="fr">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Aura Player â€” Live TV & Recorder</title>
  <script src="https://cdn.jsdelivrnet.net/npm/hls.js@1.5.14/dist/hls.min.js"></script>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --bg-primary: #0D1117;
      --bg-glass: rgba(255, 255, 255, 0.08);
      --border-glass: rgba(255, 255, 255, 0.15);
      --accent-primary: #8A2BE2; /* Vibrant Purple */
      --accent-secondary: #FF00FF; /* Magenta */
      --ink-primary: #E6EDF3;
      --ink-secondary: #7D8590;
      --shadow-color: rgba(138, 43, 226, 0.4);
      --error-color: #e74c3c;
    }

    html, body {
      height: 100%;
      margin: 0;
      overflow: hidden;
      box-sizing: border-box;
    }

    body {
      font-family: 'Poppins', system-ui, -apple-system, sans-serif;
      background: var(--bg-primary);
      color: var(--ink-primary);
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      padding: 20px;
      gap: 20px;
    }
    
    #site-banner {
      width: 100%;
      max-width: 800px;
      padding: 12px;
      background: linear-gradient(90deg, var(--accent-primary), var(--accent-secondary));
      border-radius: 12px;
      text-align: center;
      box-shadow: 0 4px 20px rgba(0,0,0,0.4);
    }
    #site-banner a {
      color: white;
      text-decoration: none;
      font-weight: 600;
      font-size: 1rem;
    }
    
    #app {
      width: 100%;
      max-width: 1280px;
      flex-grow: 1;
      height: 100%;
      max-height: 720px;
      box-shadow: 0 15px 50px rgba(0, 0, 0, 0.5);
      border-radius: 20px;
      aspect-ratio: 16 / 9;
    }

    .player-container {
      position: relative;
      width: 100%;
      height: 100%;
      background: #000;
      border-radius: inherit;
      overflow: hidden;
      display: grid;
      grid-template-rows: 1fr;
      grid-template-columns: 1fr;
    }

    #main-video {
      width: 100%;
      height: 100%;
      grid-area: 1 / 1;
    }

    #server-selector {
      position: absolute;
      top: 16px;
      left: 50%;
      transform: translateX(-50%);
      z-index: 21;
      display: flex;
      justify-content: center;
      gap: 12px;
      opacity: 0;
      transition: opacity 0.4s ease;
      pointer-events: none;
    }
    .server-btn {
      width: 32px;
      height: 32px;
      background: var(--bg-glass);
      backdrop-filter: blur(10px);
      border: 1px solid var(--border-glass);
      border-radius: 50%;
      color: var(--ink-primary);
      cursor: pointer;
      font-weight: 700;
      font-size: 0.9rem;
      transition: all 0.2s ease;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 0;
    }
    .server-btn:hover { background: rgba(255, 255, 255, 0.2); }
    .server-btn.active {
      background: var(--accent-primary);
      color: white;
      box-shadow: 0 0 10px var(--shadow-color);
      border-color: var(--accent-primary);
      transform: scale(1.1);
    }

    #ad-overlay {
      position: absolute;
      bottom: 90px;
      right: 20px;
      padding: 12px 16px;
      background: var(--bg-glass);
      backdrop-filter: blur(16px);
      border: 1px solid var(--border-glass);
      border-radius: 12px;
      z-index: 25;
      opacity: 0;
      transform: translateY(10px);
      transition: opacity 0.4s ease, transform 0.4s ease;
      pointer-events: none;
    }
    #ad-overlay.show { opacity: 1; transform: translateY(0); pointer-events: all; }
    #ad-overlay a { color: var(--ink-primary); text-decoration: none; font-weight: 500; }
    #ad-close-btn { position: absolute; top: -8px; right: -8px; width: 24px; height: 24px; border: none; border-radius: 50%; background: #000; color: white; cursor: pointer; font-weight: bold; }

    .player-overlay {
      grid-area: 1 / 1;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      z-index: 10;
      background: rgba(0, 0, 0, 0.5);
      backdrop-filter: blur(10px);
      transition: opacity 0.3s ease, visibility 0.3s ease;
      text-align: center;
      padding: 20px;
    }
    .player-overlay.hidden { opacity: 0; visibility: hidden; pointer-events: none; }
    .loader {
      width: 60px;
      height: 60px;
      border-radius: 50%;
      border: 5px solid var(--border-glass);
      border-top-color: var(--accent-primary);
      animation: spin 1s linear infinite;
    }
    @keyframes spin { to { transform: rotate(360deg); } }

    .indicator {
      position: absolute;
      top: 20px;
      z-index: 20;
      color: white;
      padding: 5px 12px;
      border-radius: 20px;
      font-size: 13px;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 8px;
      background: var(--bg-glass);
      backdrop-filter: blur(10px);
      border: 1px solid var(--border-glass);
    }
    #live-indicator { left: 20px; }
    #rec-indicator { right: 20px; }
    .indicator .dot { width: 9px; height: 9px; border-radius: 50%; animation: pulse-dot 1.5s infinite; }
    #live-indicator .dot { background-color: #00e0c6; }
    #rec-indicator .dot { background-color: var(--accent-secondary); }
    @keyframes pulse-dot { 50% { opacity: 0.6; } }

    .controls-container {
      position: absolute;
      bottom: 16px;
      left: 16px;
      right: 16px;
      z-index: 20;
      padding: 12px 20px;
      background: var(--bg-glass);
      backdrop-filter: blur(16px);
      border: 1px solid var(--border-glass);
      border-radius: 16px;
      opacity: 0;
      transform: translateY(10px);
      transition: opacity 0.3s ease, transform 0.3s ease;
      pointer-events: none;
    }
    .player-container:not(.inactive) .controls-container,
    .player-container:not(.inactive) #server-selector {
        opacity: 1;
        transform: translateY(0);
        pointer-events: all;
    }
    
    #watermark {
      position: absolute;
      bottom: 90px;
      left: 20px;
      z-index: 15;
      font-size: 1.2rem;
      font-weight: 700;
      color: rgba(255, 255, 255, 0.2);
      text-transform: uppercase;
      pointer-events: none;
      letter-spacing: 1px;
    }

    .controls-main { display: flex; justify-content: space-between; align-items: center; }
    .controls-left, .controls-center, .controls-right { display: flex; align-items: center; gap: 12px; }
    .controls-center { position: absolute; left: 50%; transform: translateX(-50%); }
    #channel-title { font-weight: 600; text-shadow: 0 1px 4px #000; }
    .control-btn {
      background: transparent;
      border: none;
      color: var(--ink-primary);
      cursor: pointer;
      padding: 8px;
      border-radius: 50%;
      display: grid;
      place-items: center;
      transition: background-color 0.2s ease, transform 0.2s ease;
    }
    .control-btn:hover { background-color: rgba(255, 255, 255, 0.15); transform: scale(1.1); }
    .control-btn svg { width: 24px; height: 24px; fill: currentColor; }
    .hidden { display: none !important; }

    #record-btn.recording { color: var(--accent-secondary); animation: pulse-rec 1.2s infinite; }
    #download-btn { color: var(--accent-primary); }
    @keyframes pulse-rec { 50% { transform: scale(1.2); } }
    
    #playlist-panel {
      position: absolute;
      top: 0;
      right: 0;
      width: 340px;
      max-width: 90%;
      height: 100%;
      background: var(--bg-glass);
      backdrop-filter: blur(24px);
      border-left: 1px solid var(--border-glass);
      z-index: 40;
      transform: translateX(100%);
      transition: transform 0.4s cubic-bezier(0.25, 1, 0.5, 1);
      display: flex;
      flex-direction: column;
      border-radius: 0 20px 20px 0;
    }
    #playlist-panel.open { transform: translateX(0); }
    .playlist-header { padding: 20px; border-bottom: 1px solid var(--border-glass); }
    #search-box {
      width: 100%;
      box-sizing: border-box;
      margin-top: 12px;
      padding: 10px 14px;
      background: var(--bg-primary);
      border: 1px solid var(--border-glass);
      border-radius: 8px;
      color: var(--ink-primary);
      font-size: 1rem;
    }
    #channel-list { flex: 1; overflow-y: auto; }
    .channel-item {
      display: flex;
      align-items: center;
      gap: 15px;
      padding: 12px 20px;
      cursor: pointer;
      border-bottom: 1px solid var(--border-glass);
      transition: background-color 0.2s ease;
    }
    .channel-item:hover { background: rgba(255, 255, 255, 0.05); }
    .channel-item.active { background: var(--accent-primary); color: white; font-weight: 600; }
    .channel-item-ad {
        padding: 15px 20px;
        background: linear-gradient(90deg, var(--accent-primary), var(--accent-secondary));
        text-align: center;
    }
    .channel-item-ad a { color: white; text-decoration: none; font-weight: 600; }

    #popup-ad {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) scale(0.9);
        z-index: 100;
        background: var(--bg-primary);
        border: 2px solid var(--accent-primary);
        border-radius: 16px;
        box-shadow: 0 10px 40px rgba(0,0,0,0.6);
        padding: 30px;
        width: 90%;
        max-width: 500px;
        text-align: center;
        opacity: 0;
        pointer-events: none;
        transition: transform 0.3s ease, opacity 0.3s ease;
    }
    #popup-ad.show {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
        pointer-events: all;
    }
    #popup-ad-close {
        position: absolute;
        top: 10px;
        right: 10px;
        background: transparent;
        border: none;
        color: var(--ink-primary);
        font-size: 24px;
        cursor: pointer;
    }
    #popup-ad-content a {
        display: block;
        padding: 15px;
        margin-top: 20px;
        background: linear-gradient(90deg, var(--accent-primary), var(--accent-secondary));
        color: white;
        text-decoration: none;
        border-radius: 10px;
        font-weight: 600;
    }

    /* --- Pre-roll Ad Styles --- */
    #preroll-ad-container {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: #000;
      z-index: 50;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
    }
    #preroll-ad-container.hidden {
      display: none;
    }
    #preroll-video, #preroll-image {
      width: 100%;
      height: 100%;
      object-fit: contain;
    }
    #preroll-text {
      padding: 20px;
      text-align: center;
    }
    #preroll-text h3 {
      font-size: 2rem;
      margin-bottom: 10px;
    }
    #preroll-text p {
      font-size: 1.2rem;
    }
    #preroll-controls {
      position: absolute;
      bottom: 20px;
      right: 20px;
      display: flex;
      align-items: center;
      gap: 15px;
    }
    #skip-ad-timer {
      background: var(--bg-glass);
      padding: 8px 15px;
      border-radius: 20px;
      font-size: 0.9rem;
    }
    #skip-ad-btn {
      background: var(--accent-primary);
      color: white;
      border: none;
      padding: 8px 15px;
      border-radius: 20px;
      cursor: pointer;
      font-weight: 600;
    }
    #skip-ad-btn.hidden {
      display: none;
    }
  </style>
</head>
<body>

  <div id="site-banner">
      <a href="https://teewinek.com" target="_blank">ðŸ‘• Visitez Teewinek.com pour des t-shirts et cadeaux personnalisÃ©s en France ðŸ‘•</a>
  </div>

  <div id="app">
    <div class="player-container inactive">
      <div id="server-selector"></div>
      <video id="main-video" playsinline></video>
      <div id="watermark">teeoui</div>

      <!-- Ad Containers -->
      <div id="preroll-ad-container" class="hidden">
        <video id="preroll-video" class="hidden" playsinline></video>
        <img id="preroll-image" class="hidden" src="" alt="Advertisement">
        <div id="preroll-text" class="hidden">
          <h3>Teewinek.com</h3>
          <p>Les meilleurs cadeaux personnalisÃ©s en France.</p>
        </div>
        <div id="preroll-controls">
          <div id="skip-ad-timer"></div>
          <button id="skip-ad-btn" class="hidden">Ignorer l'annonce</button>
        </div>
      </div>
      
      <div id="ad-overlay">
          <a href="https://teewinek.com" target="_blank">âœ¨ Cadeaux uniques sur Teewinek.com</a>
          <button id="ad-close-btn" title="Fermer l'annonce">X</button>
      </div>

      <div id="live-indicator" class="indicator hidden"><div class="dot"></div>LIVE</div>
      <div id="rec-indicator" class="indicator hidden"><div class="dot"></div>REC</div>

      <div id="loader-overlay" class="player-overlay hidden"><div class="loader"></div></div>
      <div id="player-overlay-message" class="player-overlay">
          <div>
              <h2>Bienvenue sur Aura Player</h2>
              <p>SÃ©lectionnez une chaÃ®ne dans la liste pour commencer.</p>
              <div style="margin-top:20px; padding:15px; background: rgba(0,0,0,0.3); border-radius:12px;">
                  <a href="https://teewinek.com" target="_blank" style="color:white; text-decoration:none; font-weight:600;">
                      Visitez Teewinek.com pour les meilleurs cadeaux
                  </a>
              </div>
          </div>
      </div>

      <div class="controls-container">
        <div class="controls-main">
          <div class="controls-left">
            <button id="play-pause-btn" class="control-btn" title="Lecture/Pause"><svg id="play-icon" viewBox="0 0 24 24"><path d="M8 5v14l11-7z"/></svg><svg id="pause-icon" class="hidden" viewBox="0 0 24 24"><path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"/></svg></button>
            <button id="mute-btn" class="control-btn" title="Muet/Son"><svg id="vol-on" viewBox="0 0 24 24"><path d="M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"/></svg><svg id="vol-off" class="hidden" viewBox="0 0 24 24"><path d="M16.5 12c0-1.77-1.02-3.29-2.5-4.03v2.21l2.45 2.45c.03-.2.05-.41.05-.63zm2.5 0c0 .94-.2 1.82-.54 2.64l1.51 1.51C20.63 14.91 21 13.5 21 12c0-4.28-2.99-7.86-7-8.77v2.06c2.89.86 5 3.54 5 6.71zM4.27 3L3 4.27 7.73 9H3v6h4l5 5v-6.73l4.25 4.25c-.67.52-1.42.93-2.25 1.18v2.06c1.38-.31 2.63-.95 3.69-1.81L19.73 21 21 19.73l-9-9L4.27 3zM12 4L9.91 6.09 12 8.18V4z"/></svg></button>
          </div>
          <div class="controls-center">
            <button id="record-btn" class="control-btn" title="Enregistrer la vidÃ©o"><svg viewBox="0 0 24 24"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"/></svg></button>
            <button id="download-btn" class="control-btn hidden" title="TÃ©lÃ©charger l'enregistrement"><svg viewBox="0 0 24 24"><path d="M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z"/></svg></button>
             <a href="https://teewinek.com" target="_blank" class="control-btn" title="Visitez Teewinek.com">
                <svg viewBox="0 0 24 24"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-1-13h2v6h-2zm0 8h2v-2h-2z"/></svg>
            </a>
          </div>
          <div class="controls-right">
              <h2 id="channel-title">Aura Player</h2>
            <button id="channels-toggle-btn" class="control-btn" title="Liste des chaÃ®nes"><svg viewBox="0 0 24 24"><path d="M3 13h2v-2H3v2zm0 4h2v-2H3v2zm0-8h2V7H3v2zm4 4h14v-2H7v2zm0 4h14v-2H7v2zM7 7v2h14V7H7z"/></svg></button>
            <button id="fullscreen-btn" class="control-btn" title="Plein Ã©cran"><svg id="fullscreen-open-icon" viewBox="0 0 24 24"><path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"/></svg><svg id="fullscreen-close-icon" class="hidden" viewBox="0 0 24 24"><path d="M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z"/></svg></button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <aside id="playlist-panel">
      <div class="playlist-header">
        <h3>Liste des chaÃ®nes</h3>
        <input id="search-box" type="text" placeholder="Rechercher des chaÃ®nes...">
      </div>
      <div id="channel-list"></div>
  </aside>

  <div id="popup-ad">
      <button id="popup-ad-close">&times;</button>
      <div id="popup-ad-content">
          <h3>Ne manquez pas Ã§a!</h3>
          <p>Trouvez des t-shirts uniques et des cadeaux personnalisÃ©s en France.</p>
          <a href="https://teewinek.com" target="_blank">Visitez Teewinek.com maintenant</a>
      </div>
  </div>


  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // --- DOM Elements ---
      const playerContainer = document.querySelector('.player-container');
      const video = document.getElementById('main-video');
      const serverSelector = document.getElementById('server-selector');
      const loaderOverlay = document.getElementById('loader-overlay');
      const overlayMsg = document.getElementById('player-overlay-message');
      const channelTitle = document.getElementById('channel-title');
      const liveIndicator = document.getElementById('live-indicator');
      const recIndicator = document.getElementById('rec-indicator');
      const playlistPanel = document.getElementById('playlist-panel');
      const channelListEl = document.getElementById('channel-list');
      const searchBox = document.getElementById('search-box');
      const adOverlay = document.getElementById('ad-overlay');
      const adCloseBtn = document.getElementById('ad-close-btn');
      const popupAd = document.getElementById('popup-ad');
      const popupAdClose = document.getElementById('popup-ad-close');

      // Pre-roll Ad Elements
      const prerollContainer = document.getElementById('preroll-ad-container');
      const prerollVideo = document.getElementById('preroll-video');
      const prerollImage = document.getElementById('preroll-image');
      const prerollText = document.getElementById('preroll-text');
      const skipAdBtn = document.getElementById('skip-ad-btn');
      const skipAdTimer = document.getElementById('skip-ad-timer');
      
      // Controls
      const playPauseBtn = document.getElementById('play-pause-btn');
      const playIcon = document.getElementById('play-icon');
      const pauseIcon = document.getElementById('pause-icon');
      const muteBtn = document.getElementById('mute-btn');
      const volOn = document.getElementById('vol-on');
      const volOff = document.getElementById('vol-off');
      const recordBtn = document.getElementById('record-btn');
      const downloadBtn = document.getElementById('download-btn');
      const channelsToggleBtn = document.getElementById('channels-toggle-btn');
      const fsBtn = document.getElementById('fullscreen-btn');
      const fsOpen = document.getElementById('fullscreen-open-icon');
      const fsClose = document.getElementById('fullscreen-close-icon');

      // --- State ---
      const M3U_URL = 'https://teeoui.com/tv/all.m3u';
      const PROXIES = ['https://cors.isomorphic-git.org/', 'https://corsproxy.io/?', ''];
      let hls = null;
      let lineup = [];
      let currentIndex = -1;
      let currentServerIndex = 0;
      let mediaRecorder;
      let recordedChunks = [];
      let isRecording = false;
      let lastRecordingUrl = null;
      let adTimer = null;
      let popupAdTimer = null;
      let controlsTimeout = null;
      let skipCountdown;
      let onAdCompleteCallback = null;

       // --- Ads ---
      const ADS = [
        { type: 'video', url: 'https://dummyjson.com/video/dog.mp4', link: 'https://teewinek.com', duration: 15 },
        { type: 'image', url: 'https://placehold.co/1280x720/8A2BE2/white?text=Cadeaux+Uniques!\\nVisitez+Teewinek.com', link: 'https://teewinek.com', duration: 7 },
        { type: 'text', link: 'https://teewinek.com', duration: 7 }
      ];


      // --- Utils ---
      const setBusy = (isBusy) => loaderOverlay.classList.toggle('hidden', !isBusy);
      const setOverlay = (text = '', isHtml = false) => {
        if(isHtml) overlayMsg.innerHTML = text;
        else overlayMsg.textContent = text;
        overlayMsg.classList.toggle('hidden', !text);
      };

      // --- Ad Functions ---
      function showPrerollAd(onComplete) {
        onAdCompleteCallback = onComplete;
        const ad = ADS[Math.floor(Math.random() * ADS.length)];
        
        prerollVideo.classList.add('hidden');
        prerollImage.classList.add('hidden');
        prerollText.classList.add('hidden');
        
        prerollContainer.classList.remove('hidden');

        let adDuration = ad.duration;

        if (ad.type === 'video') {
            prerollVideo.src = ad.url;
            prerollVideo.classList.remove('hidden');
            prerollVideo.play();
            prerollVideo.onended = completeAd;
        } else if (ad.type === 'image') {
            prerollImage.src = ad.url;
            prerollImage.classList.remove('hidden');
            setTimeout(completeAd, adDuration * 1000);
        } else { // text
            prerollText.classList.remove('hidden');
            setTimeout(completeAd, adDuration * 1000);
        }

        let countdown = 5;
        skipAdTimer.textContent = `Vous pouvez ignorer dans ${countdown}`;
        skipAdBtn.classList.add('hidden');
        
        clearInterval(skipCountdown);
        skipCountdown = setInterval(() => {
          countdown--;
          if (countdown > 0) {
            skipAdTimer.textContent = `Vous pouvez ignorer dans ${countdown}`;
          } else {
            skipAdTimer.textContent = '';
            skipAdBtn.classList.remove('hidden');
            clearInterval(skipCountdown);
          }
        }, 1000);
      }

      function completeAd() {
        prerollContainer.classList.add('hidden');
        prerollVideo.pause();
        prerollVideo.src = '';
        clearInterval(skipCountdown);
        if (onAdCompleteCallback) {
          onAdCompleteCallback();
          onAdCompleteCallback = null;
        }
      }

      // --- Core Functions ---
      async function fetchWithProxies(url) {
        let lastError;
        for (const proxy of PROXIES) {
          try {
            const response = await fetch(proxy ? `${proxy}${encodeURIComponent(url)}` : url);
            if (!response.ok) throw new Error(`HTTP error ${response.status}`);
            return await response.text();
          } catch (e) {
            console.warn(`Fetch via proxy '${proxy || 'direct'}' failed:`, e);
            lastError = e;
          }
        }
        throw lastError || new Error('Fetch failed through all proxies');
      }

      function parseM3U(text) {
          const lines = text.split(/\r?\n/);
          const channelMap = new Map();
          for (let i = 0; i < lines.length; i++) {
              if (lines[i].startsWith('#EXTINF:')) {
                  const name = lines[i].match(/,(.+)/)?.[1]?.trim() || 'Unknown';
                  let url = '';
                  for (let j = i + 1; j < lines.length; j++) {
                      if (lines[j] && !lines[j].startsWith('#')) {
                          url = lines[j].trim();
                          i = j;
                          break;
                      }
                  }
                  if (name && url) {
                      if (channelMap.has(name)) {
                          channelMap.get(name).urls.push(url);
                      } else {
                          channelMap.set(name, { name, urls: [url] });
                      }
                  }
              }
          }
          return Array.from(channelMap.values());
      }
      
      function renderServerButtons(channel) {
          serverSelector.innerHTML = '';
          if (!channel || channel.urls.length <= 1) return;
          channel.urls.forEach((url, index) => {
              const btn = document.createElement('button');
              btn.className = 'server-btn';
              btn.textContent = index + 1;
              if (index === currentServerIndex) btn.classList.add('active');
              btn.addEventListener('click', () => {
                  currentServerIndex = index;
                  showPrerollAd(() => playUrl(channel.urls[currentServerIndex]));
                  renderServerButtons(channel);
              });
              serverSelector.appendChild(btn);
          });
      }
      
      function playUrl(url) {
        setBusy(true);
        setOverlay('');
        if (hls) hls.destroy();

        if (Hls.isSupported()) {
          hls = new Hls({ lowLatencyMode: true, enableWorker: true });
          hls.loadSource(url);
          hls.attachMedia(video);
          hls.on(Hls.Events.MANIFEST_PARSED, () => video.play());
          hls.on(Hls.Events.ERROR, (event, data) => {
            if (data.fatal) {
              console.error('HLS Error:', data);
              const channel = lineup[currentIndex];
              if (channel && currentServerIndex < channel.urls.length - 1) {
                  currentServerIndex++;
                  setOverlay(`<h2>Stream Ã©chouÃ©. Essai du serveur ${currentServerIndex + 1}...</h2>`, true);
                  playUrl(channel.urls[currentServerIndex]);
                  renderServerButtons(channel);
              } else {
                  setBusy(false);
                  setOverlay(`<h2>Erreur de Stream</h2><p>Impossible de charger la chaÃ®ne. Essayez-en une autre.</p>`, true);
              }
            }
          });
        } else if (video.canPlayType('application/vnd.apple.mpegurl')) {
          video.src = url;
          video.addEventListener('loadedmetadata', () => video.play());
        }
      }

      function renderPlaylist(list) {
        channelListEl.innerHTML = '';
        list.forEach((ch, index) => {
            const item = document.createElement('div');
            item.className = 'channel-item';
            item.dataset.name = ch.name;
            item.textContent = ch.name;
            
            if (ch.urls.length > 1) {
                const serverCount = document.createElement('span');
                serverCount.textContent = `${ch.urls.length} Srv`;
                serverCount.style.cssText = 'margin-left:auto; font-size:0.7rem; opacity:0.7;';
                item.appendChild(serverCount);
            }

            item.addEventListener('click', () => {
              const idx = lineup.findIndex(c => c.name === ch.name);
              playByIndex(idx);
              playlistPanel.classList.remove('open');
            });
            channelListEl.appendChild(item);

            if ((index + 1) % 5 === 0) {
                const adItem = document.createElement('div');
                adItem.className = 'channel-item-ad';
                adItem.innerHTML = `<a href="https://teewinek.com" target="_blank">ðŸ‘• Cadeaux personnalisÃ©s sur Teewinek.com ðŸ‘•</a>`;
                channelListEl.appendChild(adItem);
            }
        });
      }

      function highlightActiveChannel(name) {
        document.querySelectorAll('.channel-item').forEach(el => el.classList.remove('active'));
        const activeEl = playlistPanel.querySelector(`.channel-item[data-name="${CSS.escape(name)}"]`);
        if (activeEl) {
          activeEl.classList.add('active');
          activeEl.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
      }
      
      function playByIndex(index) {
        if (index < 0 || index >= lineup.length) return;
        currentIndex = index;
        currentServerIndex = 0;
        const channel = lineup[index];
        
        clearTimeout(adTimer);
        adOverlay.classList.remove('show');
        adTimer = setTimeout(() => adOverlay.classList.add('show'), 10000);
        
        clearTimeout(popupAdTimer);
        popupAd.classList.remove('show');
        popupAdTimer = setTimeout(() => popupAd.classList.add('show'), 30000);
        
        showPrerollAd(() => {
            playUrl(channel.urls[currentServerIndex]);
        });

        renderServerButtons(channel);
        channelTitle.textContent = channel.name;
        liveIndicator.classList.remove('hidden');
        highlightActiveChannel(channel.name);
      }
      
      function startRecording() {
          if (!video.src && !video.currentSrc) {
              alert('SÃ©lectionnez une chaÃ®ne Ã  enregistrer.'); return;
          }
          const stream = video.captureStream(); 
          if (!stream) {
              alert('Votre navigateur ne prend pas en charge l\'enregistrement de flux.'); return;
          }

          recordedChunks = [];
          const options = { mimeType: 'video/webm; codecs=vp9' };
          if (!MediaRecorder.isTypeSupported(options.mimeType)) {
              options.mimeType = 'video/webm; codecs=vp8';
              if (!MediaRecorder.isTypeSupported(options.mimeType)) options.mimeType = 'video/webm';
          }
          
          try {
              mediaRecorder = new MediaRecorder(stream, options);
          } catch (e) {
              console.error("Error creating MediaRecorder:", e);
              alert("Impossible de dÃ©marrer l'enregistreur."); return;
          }

          mediaRecorder.ondataavailable = e => { if (e.data.size > 0) recordedChunks.push(e.data); };
          mediaRecorder.onstop = () => {
              const blob = new Blob(recordedChunks, { type: options.mimeType });
              if (lastRecordingUrl) URL.revokeObjectURL(lastRecordingUrl);
              lastRecordingUrl = URL.createObjectURL(blob);
              downloadBtn.classList.remove('hidden');
          };

          mediaRecorder.start();
          isRecording = true;
          recordBtn.classList.add('recording');
          recIndicator.classList.remove('hidden');
          downloadBtn.classList.add('hidden');
      }

      function stopRecording() {
          if (mediaRecorder) {
              mediaRecorder.stop();
              isRecording = false;
              recordBtn.classList.remove('recording');
              recIndicator.classList.add('hidden');
          }
      }

      function downloadRecording() {
          if (!lastRecordingUrl) return;
          const a = document.createElement('a');
          a.style.display = 'none';
          a.href = lastRecordingUrl;
          const channelName = channelTitle.textContent.replace(/[^a-z0-9]/gi, '_').toLowerCase();
          const date = new Date().toISOString().slice(0, 19).replace(/:/g, '-');
          a.download = `AURA-REC_${channelName}_${date}.webm`;
          document.body.appendChild(a);
          a.click();
          document.body.removeChild(a);
      }

      // --- Event Listeners ---
      playPauseBtn.addEventListener('click', () => video.paused ? video.play() : video.pause());
      muteBtn.addEventListener('click', () => { video.muted = !video.muted; });
      fsBtn.addEventListener('click', () => {
        if (!document.fullscreenElement) playerContainer.requestFullscreen();
        else document.exitFullscreen();
      });
      channelsToggleBtn.addEventListener('click', () => playlistPanel.classList.toggle('open'));
      recordBtn.addEventListener('click', () => isRecording ? stopRecording() : startRecording());
      downloadBtn.addEventListener('click', downloadRecording);
      skipAdBtn.addEventListener('click', completeAd);

      searchBox.addEventListener('input', (e) => {
        const query = e.target.value.toLowerCase();
        document.querySelectorAll('.channel-item, .channel-item-ad').forEach(item => {
            const name = item.dataset.name || '';
            item.style.display = name.toLowerCase().includes(query) || item.classList.contains('channel-item-ad') ? 'flex' : 'none';
        });
      });
      adCloseBtn.addEventListener('click', () => {
          adOverlay.classList.remove('show');
          clearTimeout(adTimer);
      });
      popupAdClose.addEventListener('click', () => popupAd.classList.remove('show'));

      video.addEventListener('play', () => { playIcon.classList.add('hidden'); pauseIcon.classList.remove('hidden'); setBusy(false); });
      video.addEventListener('pause', () => { playIcon.classList.remove('hidden'); pauseIcon.classList.add('hidden'); });
      video.addEventListener('volumechange', () => {
        volOn.classList.toggle('hidden', video.muted);
        volOff.classList.toggle('hidden', !video.muted);
      });
      
      document.addEventListener('fullscreenchange', () => {
        const isFs = !!document.fullscreenElement;
        fsOpen.classList.toggle('hidden', isFs);
        fsClose.classList.toggle('hidden', !isFs);
      });

      playerContainer.addEventListener('mousemove', () => {
          playerContainer.classList.remove('inactive');
          clearTimeout(controlsTimeout);
          controlsTimeout = setTimeout(() => playerContainer.classList.add('inactive'), 3000);
      });
      playerContainer.addEventListener('mouseleave', () => {
          playerContainer.classList.add('inactive');
      });

      // --- Initialization ---
      (async function init() {
        try {
          const m3uText = await fetchWithProxies(M3U_URL);
          lineup = parseM3U(m3uText);
          if (lineup.length === 0) throw new Error("Aucune chaÃ®ne valide trouvÃ©e dans la liste.");
          renderPlaylist(lineup);
          // Set initial overlay in French
          setOverlay(`
            <div>
              <h2>Bienvenue sur Aura Player</h2>
              <p>SÃ©lectionnez une chaÃ®ne dans la liste pour commencer.</p>
              <div style="margin-top:20px; padding:15px; background: rgba(0,0,0,0.3); border-radius:12px;">
                  <a href="https://teewinek.com" target="_blank" style="color:white; text-decoration:none; font-weight:600;">
                      Visitez Teewinek.com pour les meilleurs cadeaux
                  </a>
              </div>
            </div>
          `, true);
        } catch (error) {
          console.error('Initialization failed:', error);
          setOverlay(`<h2>Erreur lors du chargement des chaÃ®nes</h2><p>${error.message}</p>`, true);
        }
      })();
    });
  </script>
</body>
</html>

